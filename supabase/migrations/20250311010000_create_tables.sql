/*
  # Create Tables for Chat Application

  This migration creates:
  1. The chats table
  2. The messages table
  3. Sets up the proper relationships and RLS policies
*/

-- Create chats table
CREATE TABLE IF NOT EXISTS chats (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  title text NOT NULL,
  user_id text NOT NULL,
  created_at timestamptz DEFAULT now()
);

-- Create messages table
CREATE TABLE IF NOT EXISTS messages (
  id bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  content text NOT NULL,
  user_id text NOT NULL,
  username text NOT NULL,
  chat_id bigint REFERENCES chats(id) NOT NULL,
  is_ai boolean DEFAULT false,
  created_at timestamptz DEFAULT now()
);

-- Enable RLS on both tables
ALTER TABLE chats ENABLE ROW LEVEL SECURITY;
ALTER TABLE messages ENABLE ROW LEVEL SECURITY;

-- Create policies for chats
CREATE POLICY "Users can manage their own chats"
  ON chats
  FOR ALL
  TO authenticated
  USING (auth.uid()::text = user_id)
  WITH CHECK (auth.uid()::text = user_id);

-- Create policies for messages
CREATE POLICY "Users can read messages from their chats"
  ON messages
  FOR SELECT
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM chats
      WHERE chats.id = messages.chat_id
      AND chats.user_id = auth.uid()::text
    )
  );

CREATE POLICY "Users can insert messages to their chats"
  ON messages
  FOR INSERT
  TO authenticated
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM chats
      WHERE chats.id = chat_id
      AND chats.user_id = auth.uid()::text
    )
  );